//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TG_DNP
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DNPEntities5 : DbContext
    {
        public DNPEntities5()
            : base("name=DNPEntities5")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<dnp_Cabecera> dnp_Cabecera { get; set; }
        public virtual DbSet<dnp_Cabecera_Brief> dnp_Cabecera_Brief { get; set; }
        public virtual DbSet<dnp_Cabecera_Cotiza> dnp_Cabecera_Cotiza { get; set; }
        public virtual DbSet<dnp_Clientes> dnp_Clientes { get; set; }
        public virtual DbSet<dnp_Empaque> dnp_Empaque { get; set; }
        public virtual DbSet<dnp_EmpaqueCotiza> dnp_EmpaqueCotiza { get; set; }
        public virtual DbSet<dnp_Producto> dnp_Producto { get; set; }
        public virtual DbSet<ESPECIFICACIONES_CENT_ENV> ESPECIFICACIONES_CENT_ENV { get; set; }
        public virtual DbSet<ESPECIFICACIONES_EQUI_FORM> ESPECIFICACIONES_EQUI_FORM { get; set; }
        public virtual DbSet<dnp_Botella_Brief> dnp_Botella_Brief { get; set; }
        public virtual DbSet<dnp_Codigo_barras> dnp_Codigo_barras { get; set; }
        public virtual DbSet<dnp_Comentarios> dnp_Comentarios { get; set; }
        public virtual DbSet<dnp_CorrugadoBrief> dnp_CorrugadoBrief { get; set; }
        public virtual DbSet<dnp_Embalaje> dnp_Embalaje { get; set; }
        public virtual DbSet<dnp_EmbalajeCotiza> dnp_EmbalajeCotiza { get; set; }
        public virtual DbSet<dnp_Estatus> dnp_Estatus { get; set; }
        public virtual DbSet<dnp_Firma> dnp_Firma { get; set; }
        public virtual DbSet<dnp_FirmasBrief> dnp_FirmasBrief { get; set; }
        public virtual DbSet<dnp_Fisicoquimicas> dnp_Fisicoquimicas { get; set; }
        public virtual DbSet<dnp_FormulaBrief> dnp_FormulaBrief { get; set; }
        public virtual DbSet<dnp_FundaBrief> dnp_FundaBrief { get; set; }
        public virtual DbSet<dnp_Imagenes> dnp_Imagenes { get; set; }
        public virtual DbSet<dnp_LegalesBrief> dnp_LegalesBrief { get; set; }
        public virtual DbSet<dnp_Llenado> dnp_Llenado { get; set; }
        public virtual DbSet<dnp_LlenadoCoti> dnp_LlenadoCoti { get; set; }
        public virtual DbSet<dnp_Obs> dnp_Obs { get; set; }
        public virtual DbSet<dnp_Ponderaciones> dnp_Ponderaciones { get; set; }
        public virtual DbSet<dnp_Proyecto_Firma> dnp_Proyecto_Firma { get; set; }
        public virtual DbSet<dnp_ProyectoBrief_Firma> dnp_ProyectoBrief_Firma { get; set; }
        public virtual DbSet<dnp_Sensoriales> dnp_Sensoriales { get; set; }
        public virtual DbSet<dnp_TapaBrief> dnp_TapaBrief { get; set; }
        public virtual DbSet<dnp_TipoMaquilaBrief> dnp_TipoMaquilaBrief { get; set; }
        public virtual DbSet<view_dnp_Botella_Brief> view_dnp_Botella_Brief { get; set; }
        public virtual DbSet<view_dnp_CorrugadoBrief> view_dnp_CorrugadoBrief { get; set; }
        public virtual DbSet<view_dnp_FirmasVentas> view_dnp_FirmasVentas { get; set; }
        public virtual DbSet<view_dnp_FirmasVentasBrief> view_dnp_FirmasVentasBrief { get; set; }
        public virtual DbSet<view_dnp_FormulaBrief> view_dnp_FormulaBrief { get; set; }
        public virtual DbSet<view_dnp_FundaBrief> view_dnp_FundaBrief { get; set; }
        public virtual DbSet<view_dnp_ProyectosBotella> view_dnp_ProyectosBotella { get; set; }
        public virtual DbSet<view_dnp_proyectosBrief> view_dnp_proyectosBrief { get; set; }
        public virtual DbSet<view_dnp_ProyectosFirmados> view_dnp_ProyectosFirmados { get; set; }
        public virtual DbSet<view_dnp_ProyectosFormula> view_dnp_ProyectosFormula { get; set; }
        public virtual DbSet<view_dnp_TapaBrief> view_dnp_TapaBrief { get; set; }
        public virtual DbSet<view_dnpProyectosCorrugado> view_dnpProyectosCorrugado { get; set; }
        public virtual DbSet<view_dnpProyectosTapa> view_dnpProyectosTapa { get; set; }
        public virtual DbSet<view_PonderacionBotella> view_PonderacionBotella { get; set; }
        public virtual DbSet<view_PonderacionCabecera> view_PonderacionCabecera { get; set; }
        public virtual DbSet<View_PonderacionCorrugado> View_PonderacionCorrugado { get; set; }
        public virtual DbSet<View_PonderacionFormula> View_PonderacionFormula { get; set; }
        public virtual DbSet<View_PonderacionFunda> View_PonderacionFunda { get; set; }
        public virtual DbSet<view_PonderacionTapa> view_PonderacionTapa { get; set; }
        public virtual DbSet<view_riesgos> view_riesgos { get; set; }
        public virtual DbSet<FirmasCotizaciones> FirmasCotizaciones { get; set; }
        public virtual DbSet<dnp_ProyectoCot_Firma> dnp_ProyectoCot_Firma { get; set; }
        public virtual DbSet<view_dnpFirmasVentasCotiza> view_dnpFirmasVentasCotiza { get; set; }
        public virtual DbSet<dnp_CostoCot> dnp_CostoCot { get; set; }
    
        public virtual int ActualizaStatusBrief(string codProy, string estatus)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var estatusParameter = estatus != null ?
                new ObjectParameter("Estatus", estatus) :
                new ObjectParameter("Estatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizaStatusBrief", codProyParameter, estatusParameter);
        }
    
        public virtual int sp_ActualizaBotellaBrief(string codProy, string gramaje, string forma, string material, string color, string otrosMat, string otrosForma)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var gramajeParameter = gramaje != null ?
                new ObjectParameter("Gramaje", gramaje) :
                new ObjectParameter("Gramaje", typeof(string));
    
            var formaParameter = forma != null ?
                new ObjectParameter("forma", forma) :
                new ObjectParameter("forma", typeof(string));
    
            var materialParameter = material != null ?
                new ObjectParameter("material", material) :
                new ObjectParameter("material", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("color", color) :
                new ObjectParameter("color", typeof(string));
    
            var otrosMatParameter = otrosMat != null ?
                new ObjectParameter("otrosMat", otrosMat) :
                new ObjectParameter("otrosMat", typeof(string));
    
            var otrosFormaParameter = otrosForma != null ?
                new ObjectParameter("otrosForma", otrosForma) :
                new ObjectParameter("otrosForma", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaBotellaBrief", codProyParameter, gramajeParameter, formaParameter, materialParameter, colorParameter, otrosMatParameter, otrosFormaParameter);
        }
    
        public virtual int sp_ActualizaCabecera(string codProy, string cliente, string fnoti, string flanza, string tipoProy, string codCliente)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(string));
    
            var fnotiParameter = fnoti != null ?
                new ObjectParameter("fnoti", fnoti) :
                new ObjectParameter("fnoti", typeof(string));
    
            var flanzaParameter = flanza != null ?
                new ObjectParameter("flanza", flanza) :
                new ObjectParameter("flanza", typeof(string));
    
            var tipoProyParameter = tipoProy != null ?
                new ObjectParameter("tipoProy", tipoProy) :
                new ObjectParameter("tipoProy", typeof(string));
    
            var codClienteParameter = codCliente != null ?
                new ObjectParameter("CodCliente", codCliente) :
                new ObjectParameter("CodCliente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaCabecera", codProyParameter, clienteParameter, fnotiParameter, flanzaParameter, tipoProyParameter, codClienteParameter);
        }
    
        public virtual int sp_ActualizaCabeceraBrief(string codProy, Nullable<int> cliente, string proyecto, Nullable<int> cajas, string tipoMaq, string otro, string tipo_proyecto)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var clienteParameter = cliente.HasValue ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(int));
    
            var proyectoParameter = proyecto != null ?
                new ObjectParameter("proyecto", proyecto) :
                new ObjectParameter("proyecto", typeof(string));
    
            var cajasParameter = cajas.HasValue ?
                new ObjectParameter("cajas", cajas) :
                new ObjectParameter("cajas", typeof(int));
    
            var tipoMaqParameter = tipoMaq != null ?
                new ObjectParameter("tipoMaq", tipoMaq) :
                new ObjectParameter("tipoMaq", typeof(string));
    
            var otroParameter = otro != null ?
                new ObjectParameter("otro", otro) :
                new ObjectParameter("otro", typeof(string));
    
            var tipo_proyectoParameter = tipo_proyecto != null ?
                new ObjectParameter("tipo_proyecto", tipo_proyecto) :
                new ObjectParameter("tipo_proyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaCabeceraBrief", codProyParameter, clienteParameter, proyectoParameter, cajasParameter, tipoMaqParameter, otroParameter, tipo_proyectoParameter);
        }
    
        public virtual int sp_ActualizaCabeceraCotiza(string codProy, Nullable<int> solicita, string cliente, string producto, Nullable<int> cajas, string linea, Nullable<int> personas, Nullable<int> cajasturno, string formula, Nullable<int> contenido, string codFormula, string equipo, string usr)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var solicitaParameter = solicita.HasValue ?
                new ObjectParameter("solicita", solicita) :
                new ObjectParameter("solicita", typeof(int));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("cliente", cliente) :
                new ObjectParameter("cliente", typeof(string));
    
            var productoParameter = producto != null ?
                new ObjectParameter("producto", producto) :
                new ObjectParameter("producto", typeof(string));
    
            var cajasParameter = cajas.HasValue ?
                new ObjectParameter("cajas", cajas) :
                new ObjectParameter("cajas", typeof(int));
    
            var lineaParameter = linea != null ?
                new ObjectParameter("linea", linea) :
                new ObjectParameter("linea", typeof(string));
    
            var personasParameter = personas.HasValue ?
                new ObjectParameter("personas", personas) :
                new ObjectParameter("personas", typeof(int));
    
            var cajasturnoParameter = cajasturno.HasValue ?
                new ObjectParameter("cajasturno", cajasturno) :
                new ObjectParameter("cajasturno", typeof(int));
    
            var formulaParameter = formula != null ?
                new ObjectParameter("formula", formula) :
                new ObjectParameter("formula", typeof(string));
    
            var contenidoParameter = contenido.HasValue ?
                new ObjectParameter("contenido", contenido) :
                new ObjectParameter("contenido", typeof(int));
    
            var codFormulaParameter = codFormula != null ?
                new ObjectParameter("codFormula", codFormula) :
                new ObjectParameter("codFormula", typeof(string));
    
            var equipoParameter = equipo != null ?
                new ObjectParameter("equipo", equipo) :
                new ObjectParameter("equipo", typeof(string));
    
            var usrParameter = usr != null ?
                new ObjectParameter("usr", usr) :
                new ObjectParameter("usr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaCabeceraCotiza", codProyParameter, solicitaParameter, clienteParameter, productoParameter, cajasParameter, lineaParameter, personasParameter, cajasturnoParameter, formulaParameter, contenidoParameter, codFormulaParameter, equipoParameter, usrParameter);
        }
    
        public virtual int sp_ActualizaCodigos(string codProy, string ean13, string ean14, string codAdic)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var ean13Parameter = ean13 != null ?
                new ObjectParameter("ean13", ean13) :
                new ObjectParameter("ean13", typeof(string));
    
            var ean14Parameter = ean14 != null ?
                new ObjectParameter("ean14", ean14) :
                new ObjectParameter("ean14", typeof(string));
    
            var codAdicParameter = codAdic != null ?
                new ObjectParameter("codAdic", codAdic) :
                new ObjectParameter("codAdic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaCodigos", codProyParameter, ean13Parameter, ean14Parameter, codAdicParameter);
        }
    
        public virtual int sp_ActualizaCorrugadoBrief(string codProy, string matCorr, string terminadoCorr, string piezas, string otrosCorr)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var matCorrParameter = matCorr != null ?
                new ObjectParameter("MatCorr", matCorr) :
                new ObjectParameter("MatCorr", typeof(string));
    
            var terminadoCorrParameter = terminadoCorr != null ?
                new ObjectParameter("TerminadoCorr", terminadoCorr) :
                new ObjectParameter("TerminadoCorr", typeof(string));
    
            var piezasParameter = piezas != null ?
                new ObjectParameter("Piezas", piezas) :
                new ObjectParameter("Piezas", typeof(string));
    
            var otrosCorrParameter = otrosCorr != null ?
                new ObjectParameter("otrosCorr", otrosCorr) :
                new ObjectParameter("otrosCorr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaCorrugadoBrief", codProyParameter, matCorrParameter, terminadoCorrParameter, piezasParameter, otrosCorrParameter);
        }
    
        public virtual int sp_ActualizaEmbalaje(string codProy, string uni, string corr, string cama, string cajas, string tarima, string altura, string peso)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var uniParameter = uni != null ?
                new ObjectParameter("uni", uni) :
                new ObjectParameter("uni", typeof(string));
    
            var corrParameter = corr != null ?
                new ObjectParameter("corr", corr) :
                new ObjectParameter("corr", typeof(string));
    
            var camaParameter = cama != null ?
                new ObjectParameter("cama", cama) :
                new ObjectParameter("cama", typeof(string));
    
            var cajasParameter = cajas != null ?
                new ObjectParameter("cajas", cajas) :
                new ObjectParameter("cajas", typeof(string));
    
            var tarimaParameter = tarima != null ?
                new ObjectParameter("tarima", tarima) :
                new ObjectParameter("tarima", typeof(string));
    
            var alturaParameter = altura != null ?
                new ObjectParameter("altura", altura) :
                new ObjectParameter("altura", typeof(string));
    
            var pesoParameter = peso != null ?
                new ObjectParameter("peso", peso) :
                new ObjectParameter("peso", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaEmbalaje", codProyParameter, uniParameter, corrParameter, camaParameter, cajasParameter, tarimaParameter, alturaParameter, pesoParameter);
        }
    
        public virtual int sp_ActualizaEmbalajeCotiza(string codProy, string uni, string cajas, string obs)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var uniParameter = uni != null ?
                new ObjectParameter("uni", uni) :
                new ObjectParameter("uni", typeof(string));
    
            var cajasParameter = cajas != null ?
                new ObjectParameter("cajas", cajas) :
                new ObjectParameter("cajas", typeof(string));
    
            var obsParameter = obs != null ?
                new ObjectParameter("obs", obs) :
                new ObjectParameter("obs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaEmbalajeCotiza", codProyParameter, uniParameter, cajasParameter, obsParameter);
        }
    
        public virtual int sp_ActualizaEmpaque(string codProy, string material, string desc, string material2, string color, string codigo)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var materialParameter = material != null ?
                new ObjectParameter("material", material) :
                new ObjectParameter("material", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var material2Parameter = material2 != null ?
                new ObjectParameter("material2", material2) :
                new ObjectParameter("material2", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("color", color) :
                new ObjectParameter("color", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaEmpaque", codProyParameter, materialParameter, descParameter, material2Parameter, colorParameter, codigoParameter);
        }
    
        public virtual int sp_ActualizaEstatus(string codProy, string estatus)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var estatusParameter = estatus != null ?
                new ObjectParameter("Estatus", estatus) :
                new ObjectParameter("Estatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaEstatus", codProyParameter, estatusParameter);
        }
    
        public virtual int sp_ActualizaFirma(string codProy, string sOL, string dNP, string cOSTOS, string iNV, string rOSS, string mAT, string cAL, string pLANTA, Nullable<bool> estatus, string hAC, string vENTAS)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var sOLParameter = sOL != null ?
                new ObjectParameter("SOL", sOL) :
                new ObjectParameter("SOL", typeof(string));
    
            var dNPParameter = dNP != null ?
                new ObjectParameter("DNP", dNP) :
                new ObjectParameter("DNP", typeof(string));
    
            var cOSTOSParameter = cOSTOS != null ?
                new ObjectParameter("COSTOS", cOSTOS) :
                new ObjectParameter("COSTOS", typeof(string));
    
            var iNVParameter = iNV != null ?
                new ObjectParameter("INV", iNV) :
                new ObjectParameter("INV", typeof(string));
    
            var rOSSParameter = rOSS != null ?
                new ObjectParameter("ROSS", rOSS) :
                new ObjectParameter("ROSS", typeof(string));
    
            var mATParameter = mAT != null ?
                new ObjectParameter("MAT", mAT) :
                new ObjectParameter("MAT", typeof(string));
    
            var cALParameter = cAL != null ?
                new ObjectParameter("CAL", cAL) :
                new ObjectParameter("CAL", typeof(string));
    
            var pLANTAParameter = pLANTA != null ?
                new ObjectParameter("PLANTA", pLANTA) :
                new ObjectParameter("PLANTA", typeof(string));
    
            var estatusParameter = estatus.HasValue ?
                new ObjectParameter("estatus", estatus) :
                new ObjectParameter("estatus", typeof(bool));
    
            var hACParameter = hAC != null ?
                new ObjectParameter("HAC", hAC) :
                new ObjectParameter("HAC", typeof(string));
    
            var vENTASParameter = vENTAS != null ?
                new ObjectParameter("VENTAS", vENTAS) :
                new ObjectParameter("VENTAS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaFirma", codProyParameter, sOLParameter, dNPParameter, cOSTOSParameter, iNVParameter, rOSSParameter, mATParameter, cALParameter, pLANTAParameter, estatusParameter, hACParameter, vENTASParameter);
        }
    
        public virtual int sp_ActualizaFirmasBrief(string codProy, string ventas, string costos, string desarrollo, string dir, string val)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var ventasParameter = ventas != null ?
                new ObjectParameter("Ventas", ventas) :
                new ObjectParameter("Ventas", typeof(string));
    
            var costosParameter = costos != null ?
                new ObjectParameter("costos", costos) :
                new ObjectParameter("costos", typeof(string));
    
            var desarrolloParameter = desarrollo != null ?
                new ObjectParameter("desarrollo", desarrollo) :
                new ObjectParameter("desarrollo", typeof(string));
    
            var dirParameter = dir != null ?
                new ObjectParameter("dir", dir) :
                new ObjectParameter("dir", typeof(string));
    
            var valParameter = val != null ?
                new ObjectParameter("val", val) :
                new ObjectParameter("val", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaFirmasBrief", codProyParameter, ventasParameter, costosParameter, desarrolloParameter, dirParameter, valParameter);
        }
    
        public virtual int sp_ActualizaFisico(string codProy, string formula, string contenido, string codRossElab, string densidad, string ph, string viscocidad, string textura)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var formulaParameter = formula != null ?
                new ObjectParameter("formula", formula) :
                new ObjectParameter("formula", typeof(string));
    
            var contenidoParameter = contenido != null ?
                new ObjectParameter("contenido", contenido) :
                new ObjectParameter("contenido", typeof(string));
    
            var codRossElabParameter = codRossElab != null ?
                new ObjectParameter("codRossElab", codRossElab) :
                new ObjectParameter("codRossElab", typeof(string));
    
            var densidadParameter = densidad != null ?
                new ObjectParameter("densidad", densidad) :
                new ObjectParameter("densidad", typeof(string));
    
            var phParameter = ph != null ?
                new ObjectParameter("ph", ph) :
                new ObjectParameter("ph", typeof(string));
    
            var viscocidadParameter = viscocidad != null ?
                new ObjectParameter("viscocidad", viscocidad) :
                new ObjectParameter("viscocidad", typeof(string));
    
            var texturaParameter = textura != null ?
                new ObjectParameter("textura", textura) :
                new ObjectParameter("textura", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaFisico", codProyParameter, formulaParameter, contenidoParameter, codRossElabParameter, densidadParameter, phParameter, viscocidadParameter, texturaParameter);
        }
    
        public virtual int sp_ActualizaFromulaBrief(string codProy, string tipo, string desc_tipo, string ingredientes, string color, string colorotros, string claims, string terminados, string apariencia, string otrosformula, string imagen, string fPS, string oFPS)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var desc_tipoParameter = desc_tipo != null ?
                new ObjectParameter("desc_tipo", desc_tipo) :
                new ObjectParameter("desc_tipo", typeof(string));
    
            var ingredientesParameter = ingredientes != null ?
                new ObjectParameter("ingredientes", ingredientes) :
                new ObjectParameter("ingredientes", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("color", color) :
                new ObjectParameter("color", typeof(string));
    
            var colorotrosParameter = colorotros != null ?
                new ObjectParameter("colorotros", colorotros) :
                new ObjectParameter("colorotros", typeof(string));
    
            var claimsParameter = claims != null ?
                new ObjectParameter("claims", claims) :
                new ObjectParameter("claims", typeof(string));
    
            var terminadosParameter = terminados != null ?
                new ObjectParameter("terminados", terminados) :
                new ObjectParameter("terminados", typeof(string));
    
            var aparienciaParameter = apariencia != null ?
                new ObjectParameter("apariencia", apariencia) :
                new ObjectParameter("apariencia", typeof(string));
    
            var otrosformulaParameter = otrosformula != null ?
                new ObjectParameter("otrosformula", otrosformula) :
                new ObjectParameter("otrosformula", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(string));
    
            var fPSParameter = fPS != null ?
                new ObjectParameter("FPS", fPS) :
                new ObjectParameter("FPS", typeof(string));
    
            var oFPSParameter = oFPS != null ?
                new ObjectParameter("OFPS", oFPS) :
                new ObjectParameter("OFPS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaFromulaBrief", codProyParameter, tipoParameter, desc_tipoParameter, ingredientesParameter, colorParameter, colorotrosParameter, claimsParameter, terminadosParameter, aparienciaParameter, otrosformulaParameter, imagenParameter, fPSParameter, oFPSParameter);
        }
    
        public virtual int sp_ActualizaFundaBrief(string codProy, string matEti, string terminadoEti, string matFunda, string terminadoFunda, string impresioFunda, string otrosFunda, string mattubo, string terminadoTubo)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var matEtiParameter = matEti != null ?
                new ObjectParameter("MatEti", matEti) :
                new ObjectParameter("MatEti", typeof(string));
    
            var terminadoEtiParameter = terminadoEti != null ?
                new ObjectParameter("TerminadoEti", terminadoEti) :
                new ObjectParameter("TerminadoEti", typeof(string));
    
            var matFundaParameter = matFunda != null ?
                new ObjectParameter("MatFunda", matFunda) :
                new ObjectParameter("MatFunda", typeof(string));
    
            var terminadoFundaParameter = terminadoFunda != null ?
                new ObjectParameter("TerminadoFunda", terminadoFunda) :
                new ObjectParameter("TerminadoFunda", typeof(string));
    
            var impresioFundaParameter = impresioFunda != null ?
                new ObjectParameter("ImpresioFunda", impresioFunda) :
                new ObjectParameter("ImpresioFunda", typeof(string));
    
            var otrosFundaParameter = otrosFunda != null ?
                new ObjectParameter("otrosFunda", otrosFunda) :
                new ObjectParameter("otrosFunda", typeof(string));
    
            var mattuboParameter = mattubo != null ?
                new ObjectParameter("Mattubo", mattubo) :
                new ObjectParameter("Mattubo", typeof(string));
    
            var terminadoTuboParameter = terminadoTubo != null ?
                new ObjectParameter("TerminadoTubo", terminadoTubo) :
                new ObjectParameter("TerminadoTubo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaFundaBrief", codProyParameter, matEtiParameter, terminadoEtiParameter, matFundaParameter, terminadoFundaParameter, impresioFundaParameter, otrosFundaParameter, mattuboParameter, terminadoTuboParameter);
        }
    
        public virtual int sp_ActualizaImagenBrief(string codProy, string imagen)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaImagenBrief", codProyParameter, imagenParameter);
        }
    
        public virtual int sp_ActualizaImagenes(string codProy, string prod, string lot, string corr)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var prodParameter = prod != null ?
                new ObjectParameter("prod", prod) :
                new ObjectParameter("prod", typeof(string));
    
            var lotParameter = lot != null ?
                new ObjectParameter("lot", lot) :
                new ObjectParameter("lot", typeof(string));
    
            var corrParameter = corr != null ?
                new ObjectParameter("corr", corr) :
                new ObjectParameter("corr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaImagenes", codProyParameter, prodParameter, lotParameter, corrParameter);
        }
    
        public virtual int sp_ActualizaLegalBrief(string codProy, string legal, string otros, string req_legal, string txtEs)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var legalParameter = legal != null ?
                new ObjectParameter("legal", legal) :
                new ObjectParameter("legal", typeof(string));
    
            var otrosParameter = otros != null ?
                new ObjectParameter("otros", otros) :
                new ObjectParameter("otros", typeof(string));
    
            var req_legalParameter = req_legal != null ?
                new ObjectParameter("req_legal", req_legal) :
                new ObjectParameter("req_legal", typeof(string));
    
            var txtEsParameter = txtEs != null ?
                new ObjectParameter("txtEs", txtEs) :
                new ObjectParameter("txtEs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaLegalBrief", codProyParameter, legalParameter, otrosParameter, req_legalParameter, txtEsParameter);
        }
    
        public virtual int sp_ActualizaObs(string codProy, string obs)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var obsParameter = obs != null ?
                new ObjectParameter("obs", obs) :
                new ObjectParameter("obs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaObs", codProyParameter, obsParameter);
        }
    
        public virtual int sp_ActualizaProducto(string codProy, string producto, string codRoss, string cajasFab, string regSan, string cad)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var productoParameter = producto != null ?
                new ObjectParameter("Producto", producto) :
                new ObjectParameter("Producto", typeof(string));
    
            var codRossParameter = codRoss != null ?
                new ObjectParameter("CodRoss", codRoss) :
                new ObjectParameter("CodRoss", typeof(string));
    
            var cajasFabParameter = cajasFab != null ?
                new ObjectParameter("CajasFab", cajasFab) :
                new ObjectParameter("CajasFab", typeof(string));
    
            var regSanParameter = regSan != null ?
                new ObjectParameter("RegSan", regSan) :
                new ObjectParameter("RegSan", typeof(string));
    
            var cadParameter = cad != null ?
                new ObjectParameter("Cad", cad) :
                new ObjectParameter("Cad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaProducto", codProyParameter, productoParameter, codRossParameter, cajasFabParameter, regSanParameter, cadParameter);
        }
    
        public virtual int sp_ActualizaSensoriales(string codProy, string color, string fragancia, string fijacion, string otros)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("color", color) :
                new ObjectParameter("color", typeof(string));
    
            var fraganciaParameter = fragancia != null ?
                new ObjectParameter("fragancia", fragancia) :
                new ObjectParameter("fragancia", typeof(string));
    
            var fijacionParameter = fijacion != null ?
                new ObjectParameter("fijacion", fijacion) :
                new ObjectParameter("fijacion", typeof(string));
    
            var otrosParameter = otros != null ?
                new ObjectParameter("otros", otros) :
                new ObjectParameter("otros", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaSensoriales", codProyParameter, colorParameter, fraganciaParameter, fijacionParameter, otrosParameter);
        }
    
        public virtual int sp_ActualizaTapaBrief(string codProy, string tipo, string material, string color, string terminado, string linner, string otrostipo, string otrosmaterial, string otroslinner, string colortext)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var materialParameter = material != null ?
                new ObjectParameter("material", material) :
                new ObjectParameter("material", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("color", color) :
                new ObjectParameter("color", typeof(string));
    
            var terminadoParameter = terminado != null ?
                new ObjectParameter("terminado", terminado) :
                new ObjectParameter("terminado", typeof(string));
    
            var linnerParameter = linner != null ?
                new ObjectParameter("linner", linner) :
                new ObjectParameter("linner", typeof(string));
    
            var otrostipoParameter = otrostipo != null ?
                new ObjectParameter("otrostipo", otrostipo) :
                new ObjectParameter("otrostipo", typeof(string));
    
            var otrosmaterialParameter = otrosmaterial != null ?
                new ObjectParameter("otrosmaterial", otrosmaterial) :
                new ObjectParameter("otrosmaterial", typeof(string));
    
            var otroslinnerParameter = otroslinner != null ?
                new ObjectParameter("otroslinner", otroslinner) :
                new ObjectParameter("otroslinner", typeof(string));
    
            var colortextParameter = colortext != null ?
                new ObjectParameter("colortext", colortext) :
                new ObjectParameter("colortext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaTapaBrief", codProyParameter, tipoParameter, materialParameter, colorParameter, terminadoParameter, linnerParameter, otrostipoParameter, otrosmaterialParameter, otroslinnerParameter, colortextParameter);
        }
    
        public virtual int sp_BorrarImagen(string codProy)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("codProy", codProy) :
                new ObjectParameter("codProy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BorrarImagen", codProyParameter);
        }
    
        public virtual int sp_EliminaImagenes(string codProy, string prod)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var prodParameter = prod != null ?
                new ObjectParameter("prod", prod) :
                new ObjectParameter("prod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminaImagenes", codProyParameter, prodParameter);
        }
    
        public virtual ObjectResult<sp_FiltraProyectos_Result> sp_FiltraProyectos(string filtro)
        {
            var filtroParameter = filtro != null ?
                new ObjectParameter("filtro", filtro) :
                new ObjectParameter("filtro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_FiltraProyectos_Result>("sp_FiltraProyectos", filtroParameter);
        }
    
        public virtual ObjectResult<sp_ObtenerEmpaques_Result> sp_ObtenerEmpaques(string busqueda)
        {
            var busquedaParameter = busqueda != null ?
                new ObjectParameter("busqueda", busqueda) :
                new ObjectParameter("busqueda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ObtenerEmpaques_Result>("sp_ObtenerEmpaques", busquedaParameter);
        }
    
        public virtual ObjectResult<sp_ObtenerEmpaquesCotiza_Result> sp_ObtenerEmpaquesCotiza(string busqueda)
        {
            var busquedaParameter = busqueda != null ?
                new ObjectParameter("busqueda", busqueda) :
                new ObjectParameter("busqueda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ObtenerEmpaquesCotiza_Result>("sp_ObtenerEmpaquesCotiza", busquedaParameter);
        }
    
        public virtual ObjectResult<sp_ObtenerProyectos_Result> sp_ObtenerProyectos(string busqueda, Nullable<bool> archivo)
        {
            var busquedaParameter = busqueda != null ?
                new ObjectParameter("busqueda", busqueda) :
                new ObjectParameter("busqueda", typeof(string));
    
            var archivoParameter = archivo.HasValue ?
                new ObjectParameter("archivo", archivo) :
                new ObjectParameter("archivo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ObtenerProyectos_Result>("sp_ObtenerProyectos", busquedaParameter, archivoParameter);
        }
    
        public virtual ObjectResult<sp_ObtenerProyectosBrief_Result> sp_ObtenerProyectosBrief(string busqueda)
        {
            var busquedaParameter = busqueda != null ?
                new ObjectParameter("busqueda", busqueda) :
                new ObjectParameter("busqueda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ObtenerProyectosBrief_Result>("sp_ObtenerProyectosBrief", busquedaParameter);
        }
    
        public virtual ObjectResult<sp_ObtenerProyectosCoti_Result> sp_ObtenerProyectosCoti(string busqueda)
        {
            var busquedaParameter = busqueda != null ?
                new ObjectParameter("busqueda", busqueda) :
                new ObjectParameter("busqueda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ObtenerProyectosCoti_Result>("sp_ObtenerProyectosCoti", busquedaParameter);
        }
    
        public virtual ObjectResult<sp_ObtenerProyectosFirmados_Result> sp_ObtenerProyectosFirmados(string usr)
        {
            var usrParameter = usr != null ?
                new ObjectParameter("usr", usr) :
                new ObjectParameter("usr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ObtenerProyectosFirmados_Result>("sp_ObtenerProyectosFirmados", usrParameter);
        }
    
        public virtual int Actualiza_Equipo_formulacion(string codProy, string tanques, string capacidad)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var tanquesParameter = tanques != null ?
                new ObjectParameter("tanques", tanques) :
                new ObjectParameter("tanques", typeof(string));
    
            var capacidadParameter = capacidad != null ?
                new ObjectParameter("capacidad", capacidad) :
                new ObjectParameter("capacidad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Actualiza_Equipo_formulacion", codProyParameter, tanquesParameter, capacidadParameter);
        }
    
        public virtual int Actualiza_Especificacion_EquiEnv(string codProy, string centro_envasado)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var centro_envasadoParameter = centro_envasado != null ?
                new ObjectParameter("Centro_envasado", centro_envasado) :
                new ObjectParameter("Centro_envasado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Actualiza_Especificacion_EquiEnv", codProyParameter, centro_envasadoParameter);
        }
    
        public virtual int sp_ActualizaFirmasCotiza(string codProy, string ventas, string costos, string desarrollo, string dir)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var ventasParameter = ventas != null ?
                new ObjectParameter("Ventas", ventas) :
                new ObjectParameter("Ventas", typeof(string));
    
            var costosParameter = costos != null ?
                new ObjectParameter("costos", costos) :
                new ObjectParameter("costos", typeof(string));
    
            var desarrolloParameter = desarrollo != null ?
                new ObjectParameter("desarrollo", desarrollo) :
                new ObjectParameter("desarrollo", typeof(string));
    
            var dirParameter = dir != null ?
                new ObjectParameter("dir", dir) :
                new ObjectParameter("dir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaFirmasCotiza", codProyParameter, ventasParameter, costosParameter, desarrolloParameter, dirParameter);
        }
    
        public virtual int sp_ActualizaCosto_Cot(string codProy, string costpieza, string costcaja, string incoterm, string vigencia, string moq)
        {
            var codProyParameter = codProy != null ?
                new ObjectParameter("CodProy", codProy) :
                new ObjectParameter("CodProy", typeof(string));
    
            var costpiezaParameter = costpieza != null ?
                new ObjectParameter("costpieza", costpieza) :
                new ObjectParameter("costpieza", typeof(string));
    
            var costcajaParameter = costcaja != null ?
                new ObjectParameter("costcaja", costcaja) :
                new ObjectParameter("costcaja", typeof(string));
    
            var incotermParameter = incoterm != null ?
                new ObjectParameter("incoterm", incoterm) :
                new ObjectParameter("incoterm", typeof(string));
    
            var vigenciaParameter = vigencia != null ?
                new ObjectParameter("vigencia", vigencia) :
                new ObjectParameter("vigencia", typeof(string));
    
            var moqParameter = moq != null ?
                new ObjectParameter("moq", moq) :
                new ObjectParameter("moq", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaCosto_Cot", codProyParameter, costpiezaParameter, costcajaParameter, incotermParameter, vigenciaParameter, moqParameter);
        }
    }
}
